name: Create Release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Get Version
        id: get_version
        run: echo "::set-output name=version::$(grep -Eo '[0-9]+\.[0-9]+\.[0-9]+' cmdline_go.go)"
      - name: Check Release
        id: check_release
        uses: actions/github-script@v4
        with:
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            core.setOutput('release_exists', releases.some(release => release.tag_name === `${{ steps.get_version.outputs.version }}`));
          token: ${{ secrets.MYTOKEN }}
      - name: Create Release
        id: create_release
        if: steps.check_release.outputs.release_exists != 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MYTOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
